namespace NiteCompiler.Analysis.Tokens;

public enum TokenKind
{
	EndOfFile = 0x0000,
	// Keywords     = 0x0000,
	KeywordNew = 0x0001,
	KeywordRef = 0x0002,
	KeywordLocal = 0x0003,
	KeywordType = 0x0004,
	KeywordGet = 0x0005,
	KeywordSet = 0x0006,
	KeywordLimit = 0x0007,
	KeywordIf = 0x0008,
	KeywordElse = 0x0009,
	KeywordGoto = 0x000A,
	KeywordStatic = 0x000B,
	KeywordPublic = 0x000C,
	KeywordPrivate = 0x000D,
	KeywordProtected = 0x000E,
	// TypeKeyword  = 0x0100,
	KeywordI8 = 0x0101,
	KeywordI16 = 0x0102,
	KeywordI32 = 0x0103,
	KeywordI64 = 0x0104,
	KeywordI128 = 0x0105,
	KeywordU8 = 0x0106,
	KeywordU16 = 0x0107,
	KeywordU32 = 0x0108,
	KeywordU64 = 0x0109,
	KeywordU128 = 0x010A,
	KeywordString = 0x010B,
	KeywordChar = 0x010C,
	KeywordBoolean = 0x010D,
	KeywordF16 = 0x010E,
	KeywordF32 = 0x010F,
	KeywordF64 = 0x0110,
	KeywordF128 = 0x0111,
	// Punctuation      = 0x0200,
	Semicolon = 0x0201,
	Comma = 0x0202,
	LBracket = 0x0203,
	RBracket = 0x0204,
	LBrace = 0x0205,
	RBrace = 0x0206,
	LParenthesis = 0x0207,
	RParenthesis = 0x0208,
	// Operators        = 0x0300,
	OperatorEq = 0x0301,
	OperatorEqEq = 0x0301,
	OperatorPlus = 0x0302,
	OperatorMinus = 0x0303,
	OperatorAsterisk = 0x0304,
	OperatorAmpersand = 0x0305,
	OperatorSlash = 0x0306,
	OperatorOr = 0x0307,
	OperatorXOr = 0x0308,
	OperatorAnd = 0x0309,
	OperatorPlusEq = 0x030A,
	OperatorMinusEq = 0x030B,
	OperatorAsteriskEq = 0x030C,
	OperatorAmpersandEq = 0x030D,
	OperatorSlashEq = 0x030E,
	OperatorOrEq = 0x030F,
	OperatorXOrEq = 0x0310,
	OperatorAndEq = 0x0311,
	OperatorInc	= 0x0350,
	OperatorDec = 0x0351,
	OperatorDot = 0x0352,
	OperatorDotDot = 0x0353,
	OperatorColon = 0x0354, // call `Type:method()`
	OperatorColonColon = 0x0355, // call `Type::new()` etc. 
	// Identifier   = 0x1000,
	Identifier = 0x1001,
	// Literals     = 0x2000,
	CharacterLiteral = 0x2001,
	StringLiteral = 0x2002,
	IntegerLiteral = 0x2011,
	RealIntegerLiteral = 0x2012,
	BooleanLiteral = 0x2021,
}