/* 
 * m - method / function
 * f - field
 * l - literal
 * s - static
 */

Standard.Void:
	m GetType(): Standard.Runtime.Type

<Standard.Math>:
	sm abs(f64): f64
	sm acos(f64): f64
	sm asin(f64): f64
	sm atan(f64): f64
	sm atan2(f64): f64
	sm celling(f64): f64
	sm cos(f64): f64
	sm cosh(f64): f64
	sm exp(f64): f64
	sm floor(f64): f64
	sm log(f64): f64
	sm log(f64, f64): f64
	sm log10(f64): f64
	sm pow(f64, f64): f64
	sm sign(f64): f64
	sm sin(f64): f64
	sm sinh(f64): f64
	sm tan(f64): f64
	sm tanh(f64): f64
	lf E: f64
	lf Pi: f64

Standard.Logic.Boolean:
	sm op_and(bool, bool): bool
	sm op_or(bool, bool): bool
	sm op_xor(bool, bool): bool

Standard.Numeric.Uint8:
	sm op_and(u8, u8): u8
	sm op_or(u8, u8): u8
	sm op_xor(u8, u8): u8
	// TODO: Finish it later...

Standard.Numeric.UInt16
Standard.Numeric.UInt32
Standard.Numeric.UInt64
Standard.Numeric.UInt128
Standard.Numeric.UIntPtr
Standard.Numeric.SInt8
Standard.Numeric.SInt16
Standard.Numeric.SInt32
Standard.Numeric.SInt64
Standard.Numeric.SInt128
Standard.Numeric.SIntPtr
Standard.Numeric.Float16
Standard.Numeric.Float32
Standard.Numeric.Float64
Standard.Text.StringLiteral
Standard.Text.CharUtf8
Standard.Text.CharUtf32
Standard.Text.StringUtf8
Standard.Text.StringUtf32
Standard.Runtime.Type